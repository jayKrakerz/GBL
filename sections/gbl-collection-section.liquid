{% comment %}
  GBL Accessories Collection Section
  - Clean, elegant collection display with filtering and sorting
  - Matching the gold and black aesthetics of other GBL sections
  - Responsive grid layout with hover effects
  - Product filtering sidebar with color, price and material options
{% endcomment %}

{{ 'component-price.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .gbl-collection {
    padding: 60px 0;
    background-color: {{ section.settings.background_color }};
  }

  .gbl-collection__container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 20px;
  }

  .gbl-collection__header {
    margin-bottom: 40px;
    text-align: center;
  }

  .gbl-collection__title {
    font-size: 42px;
    font-weight: 400;
    margin-bottom: 10px;
    font-family: var(--font-heading-family);
    color: {{ section.settings.title_color }};
  }

  .gbl-collection__description {
    max-width: 700px;
    margin: 0 auto;
    font-size: 16px;
    line-height: 1.6;
    color: {{ section.settings.text_color }};
  }

  .gbl-collection__layout {
    display: flex;
    gap: 30px;
  }

  .gbl-collection__sidebar {
    width: 250px;
    flex-shrink: 0;
  }

  .gbl-collection__filter-group {
    margin-bottom: 30px;
    border-bottom: 1px solid rgba(212, 175, 55, 0.2);
    padding-bottom: 20px;
  }

  .gbl-collection__filter-title {
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 15px;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: {{ section.settings.title_color }};
  }

  .gbl-collection__filter-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .gbl-collection__filter-item {
    margin-bottom: 10px;
  }

  .gbl-collection__filter-checkbox {
    display: flex;
    align-items: center;
    cursor: pointer;
  }

  .gbl-collection__filter-checkbox input {
    margin-right: 10px;
    accent-color: {{ section.settings.accent_color }};
  }

  .gbl-collection__filter-checkbox-label {
    font-size: 14px;
    color: {{ section.settings.text_color }};
  }

  .gbl-collection__color-options {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
  }

  .gbl-collection__color-option {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    cursor: pointer;
    border: 1px solid #ddd;
    position: relative;
  }

  .gbl-collection__color-option--selected:after {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    border: 2px solid {{ section.settings.accent_color }};
    border-radius: 50%;
  }

  .gbl-collection__color-option--gold {
    background-color: #d4af37;
  }

  .gbl-collection__color-option--silver {
    background-color: #c0c0c0;
  }

  .gbl-collection__color-option--rose-gold {
    background-color: #b76e79;
  }

  .gbl-collection__color-option--black {
    background-color: #000000;
  }

  .gbl-collection__price-range {
    margin-top: 15px;
  }

  .gbl-collection__price-inputs {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 10px;
  }

  .gbl-collection__price-input {
    width: 90px;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
  }

  .gbl-collection__filter-button {
    background-color: {{ section.settings.accent_color }};
    color: #000000;
    border: none;
    padding: 10px 15px;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    width: 100%;
    margin-top: 15px;
    transition: all 0.3s ease;
  }

  .gbl-collection__filter-button:hover {
    opacity: 0.9;
  }

  .gbl-collection__main {
    flex: 1;
  }

  .gbl-collection__toolbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding-bottom: 15px;
    border-bottom: 1px solid rgba(212, 175, 55, 0.2);
  }

  .gbl-collection__products-count {
    font-size: 14px;
    color: {{ section.settings.text_color }};
  }

  .gbl-collection__sort {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  .gbl-collection__sort-label {
    font-size: 14px;
    color: {{ section.settings.text_color }};
  }

  .gbl-collection__sort-select {
    padding: 8px 25px 8px 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    background-color: #fff;
    font-size: 14px;
    color: #333;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg width='10' height='6' viewBox='0 0 10 6' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L5 5L9 1' stroke='%23333333' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 10px center;
  }

  .gbl-collection__grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 30px;
  }

  .gbl-collection__card {
    position: relative;
    display: flex;
    flex-direction: column;
  }

  .gbl-collection__image-wrapper {
    position: relative;
    padding-bottom: 100%;
    background-color: #f7f4ef;
    margin-bottom: 15px;
    overflow: hidden;
  }

  .gbl-collection__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
    transition: transform 0.5s ease;
  }

  .gbl-collection__card:hover .gbl-collection__image {
    transform: scale(1.05);
  }

  .gbl-collection__wishlist {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    padding: 0;
    cursor: pointer;
    z-index: 1;
  }

  .gbl-collection__wishlist-icon {
    width: 24px;
    height: 24px;
    fill: none;
    stroke: #888;
    stroke-width: 1.5;
    transition: all 0.3s ease;
  }

  .gbl-collection__wishlist:hover .gbl-collection__wishlist-icon {
    stroke: {{ section.settings.accent_color }};
  }

  .gbl-collection__info {
    display: flex;
    flex-direction: column;
  }

  .gbl-collection__title-link {
    text-decoration: none;
    color: inherit;
  }

  .gbl-collection__product-title {
    font-size: 16px;
    margin: 0 0 5px 0;
    font-weight: 500;
    color: {{ section.settings.title_color }};
  }

  .gbl-collection__price {
    font-size: 16px;
    font-weight: 400;
    color: {{ section.settings.text_color }};
  }

  .gbl-collection__color-variants {
    display: flex;
    margin-top: 10px;
  }

  .gbl-collection__color-variant {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    margin-right: 5px;
    cursor: pointer;
    border: 1px solid #ddd;
  }

  .gbl-collection__color-variant--gold {
    background-color: #d4af37;
  }

  .gbl-collection__color-variant--silver {
    background-color: #c0c0c0;
  }

  .gbl-collection__color-variant--rose-gold {
    background-color: #b76e79;
  }

  .gbl-collection__pagination {
    margin-top: 40px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 5px;
  }

  .gbl-collection__pagination-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    border: 1px solid #ddd;
    text-decoration: none;
    color: {{ section.settings.text_color }};
    font-size: 14px;
    transition: all 0.3s ease;
  }

  .gbl-collection__pagination-link:hover {
    background-color: rgba(212, 175, 55, 0.1);
    border-color: {{ section.settings.accent_color }};
  }

  .gbl-collection__pagination-link--current {
    background-color: {{ section.settings.accent_color }};
    border-color: {{ section.settings.accent_color }};
    color: #000000;
  }

  .gbl-collection__mobile-filter-toggle {
    display: none;
    align-items: center;
    gap: 8px;
    padding: 8px 15px;
    background-color: {{ section.settings.accent_color }};
    color: #000000;
    border: none;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    margin-bottom: 20px;
  }

  .gbl-collection__mobile-filter-icon {
    width: 16px;
    height: 16px;
  }

  @media screen and (max-width: 990px) {
    .gbl-collection__layout {
      flex-direction: column;
    }

    .gbl-collection__sidebar {
      width: 100%;
      margin-bottom: 30px;
      display: none;
    }

    .gbl-collection__mobile-filter-toggle {
      display: flex;
    }

    .gbl-collection__mobile-filter-toggle[aria-expanded="true"] + .gbl-collection__sidebar {
      display: block;
    }

    .gbl-collection__grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 580px) {
    .gbl-collection {
      padding: 40px 0;
    }
    
    .gbl-collection__grid {
      grid-template-columns: 1fr;
    }
    
    .gbl-collection__title {
      font-size: 32px;
    }

    .gbl-collection__toolbar {
      flex-direction: column;
      align-items: flex-start;
      gap: 15px;
    }
  }
{%- endstyle -%}

<div class="gbl-collection">
  <div class="gbl-collection__container">
    <div class="gbl-collection__header">
      <h1 class="gbl-collection__title">{{ collection.title }}</h1>
      {% if collection.description != blank %}
        <div class="gbl-collection__description">
          {{ collection.description }}
        </div>
      {% endif %}
    </div>

    <button class="gbl-collection__mobile-filter-toggle" aria-expanded="false" aria-controls="gbl-collection-sidebar">
      <svg class="gbl-collection__mobile-filter-icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M3 6H21M3 12H21M3 18H21" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
      Filter & Sort
    </button>

    <div class="gbl-collection__layout">
      <aside class="gbl-collection__sidebar" id="gbl-collection-sidebar">
        <form id="collection-filter-form">
          <div class="gbl-collection__filter-group">
            <h3 class="gbl-collection__filter-title">Product Type</h3>
            <ul class="gbl-collection__filter-list">
              {% for product_type in collection.all_types %}
                <li class="gbl-collection__filter-item">
                  <label class="gbl-collection__filter-checkbox">
                    <input type="checkbox" name="product_type" value="{{ product_type | handle }}">
                    <span class="gbl-collection__filter-checkbox-label">{{ product_type }}</span>
                  </label>
                </li>
              {% endfor %}
            </ul>
          </div>

          <div class="gbl-collection__filter-group">
            <h3 class="gbl-collection__filter-title">Materials</h3>
            <ul class="gbl-collection__filter-list">
              {% for tag in collection.all_tags %}
                {% if tag contains 'material:' or tag contains 'Material:' %}
                  {% assign material = tag | split: ':' | last | strip %}
                  <li class="gbl-collection__filter-item">
                    <label class="gbl-collection__filter-checkbox">
                      <input type="checkbox" name="material" value="{{ material | handle }}">
                      <span class="gbl-collection__filter-checkbox-label">{{ material }}</span>
                    </label>
                  </li>
                {% endif %}
              {% endfor %}
            </ul>
          </div>

          <div class="gbl-collection__filter-group">
            <h3 class="gbl-collection__filter-title">Color</h3>
            <div class="gbl-collection__color-options">
              <div class="gbl-collection__color-option gbl-collection__color-option--gold" title="Gold" data-color="gold"></div>
              <div class="gbl-collection__color-option gbl-collection__color-option--silver" title="Silver" data-color="silver"></div>
              <div class="gbl-collection__color-option gbl-collection__color-option--rose-gold" title="Rose Gold" data-color="rose-gold"></div>
              <div class="gbl-collection__color-option gbl-collection__color-option--black" title="Black" data-color="black"></div>
            </div>
          </div>

          <div class="gbl-collection__filter-group">
            <h3 class="gbl-collection__filter-title">Price Range</h3>
            <div class="gbl-collection__price-range">
              <div class="gbl-collection__price-inputs">
                <input type="number" class="gbl-collection__price-input" placeholder="Min" name="price_min">
                <span>-</span>
                <input type="number" class="gbl-collection__price-input" placeholder="Max" name="price_max">
              </div>
            </div>
          </div>

          <button type="submit" class="gbl-collection__filter-button">Apply Filters</button>
        </form>
      </aside>

      <div class="gbl-collection__main">
        <div class="gbl-collection__toolbar">
          <div class="gbl-collection__products-count">
            {{ collection.products_count }} products
          </div>
          <div class="gbl-collection__sort">
            <label for="SortBy" class="gbl-collection__sort-label">Sort by:</label>
            <select id="SortBy" class="gbl-collection__sort-select">
              <option value="manual">Featured</option>
              <option value="price-ascending">Price: Low to High</option>
              <option value="price-descending">Price: High to Low</option>
              <option value="title-ascending">Alphabetically: A-Z</option>
              <option value="title-descending">Alphabetically: Z-A</option>
              <option value="created-ascending">Date: Old to New</option>
              <option value="created-descending">Date: New to Old</option>
              <option value="best-selling">Best Selling</option>
            </select>
          </div>
        </div>

        <div class="gbl-collection__grid">
          {% paginate collection.products by section.settings.products_per_page %}
            {% for product in collection.products %}
              <div class="gbl-collection__card">
                <div class="gbl-collection__image-wrapper">
                  <button class="gbl-collection__wishlist" aria-label="Add to wishlist">
                    <svg class="gbl-collection__wishlist-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"/>
                    </svg>
                  </button>
                  
                  <a href="{{ product.url }}">
                    {% if product.featured_image != blank %}
                      {{ product.featured_image | img_url: '500x500' | img_tag: product.title, 'gbl-collection__image' }}
                    {% else %}
                      {{ 'product-1' | placeholder_svg_tag: 'gbl-collection__image' }}
                    {% endif %}
                  </a>
                </div>
                
                <div class="gbl-collection__info">
                  <a href="{{ product.url }}" class="gbl-collection__title-link">
                    <h3 class="gbl-collection__product-title">{{ product.title }}</h3>
                  </a>
                  
                  <span class="gbl-collection__price">{{ product.price | money }}</span>
                  
                  {% if product.variants.size > 1 and section.settings.show_color_variants %}
                    {% assign has_gold = false %}
                    {% assign has_silver = false %}
                    {% assign has_rose_gold = false %}
                    
                    {% for variant in product.variants %}
                      {% if variant.title contains 'Gold' or variant.title contains 'gold' %}
                        {% assign has_gold = true %}
                      {% endif %}
                      
                      {% if variant.title contains 'Silver' or variant.title contains 'silver' %}
                        {% assign has_silver = true %}
                      {% endif %}
                      
                      {% if variant.title contains 'Rose' or variant.title contains 'rose' %}
                        {% assign has_rose_gold = true %}
                      {% endif %}
                    {% endfor %}
                    
                    {% if has_gold or has_silver or has_rose_gold %}
                      <div class="gbl-collection__color-variants">
                        {% if has_gold %}
                          <span class="gbl-collection__color-variant gbl-collection__color-variant--gold" title="Gold"></span>
                        {% endif %}
                        
                        {% if has_silver %}
                          <span class="gbl-collection__color-variant gbl-collection__color-variant--silver" title="Silver"></span>
                        {% endif %}
                        
                        {% if has_rose_gold %}
                          <span class="gbl-collection__color-variant gbl-collection__color-variant--rose-gold" title="Rose Gold"></span>
                        {% endif %}
                      </div>
                    {% endif %}
                  {% endif %}
                </div>
              </div>
            {% endfor %}
            
            {% if paginate.pages > 1 %}
              <div class="gbl-collection__pagination">
                {% if paginate.previous %}
                  <a href="{{ paginate.previous.url }}" class="gbl-collection__pagination-link">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </a>
                {% endif %}
                
                {% for part in paginate.parts %}
                  {% if part.is_link %}
                    <a href="{{ part.url }}" class="gbl-collection__pagination-link">{{ part.title }}</a>
                  {% else %}
                    <span class="gbl-collection__pagination-link{% if part.title == paginate.current_page %} gbl-collection__pagination-link--current{% endif %}">{{ part.title }}</span>
                  {% endif %}
                {% endfor %}
                
                {% if paginate.next %}
                  <a href="{{ paginate.next.url }}" class="gbl-collection__pagination-link">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M9 6L15 12L9 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </a>
                {% endif %}
              </div>
            {% endif %}
          {% endpaginate %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile filter toggle
    const mobileFilterToggle = document.querySelector('.gbl-collection__mobile-filter-toggle');
    
    if (mobileFilterToggle) {
      mobileFilterToggle.addEventListener('click', function() {
        const expanded = this.getAttribute('aria-expanded') === 'true';
        this.setAttribute('aria-expanded', !expanded);
      });
    }
    
    // Color options selection
    const colorOptions = document.querySelectorAll('.gbl-collection__color-option');
    
    colorOptions.forEach(option => {
      option.addEventListener('click', function() {
        const wasSelected = this.classList.contains('gbl-collection__color-option--selected');
        
        // Remove selection from all
        colorOptions.forEach(opt => {
          opt.classList.remove('gbl-collection__color-option--selected');
        });
        
        // Toggle selection on this one (only select if it wasn't already selected)
        if (!wasSelected) {
          this.classList.add('gbl-collection__color-option--selected');
        }
      });
    });
    
    // Sort by functionality
    const sortSelect = document.getElementById('SortBy');
    
    if (sortSelect) {
      // Set initial value based on current URL
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has('sort_by')) {
        sortSelect.value = urlParams.get('sort_by');
      }
      
      // Add change event listener
      sortSelect.addEventListener('change', function() {
        const url = new URL(window.location.href);
        url.searchParams.set('sort_by', this.value);
        window.location = url.toString();
      });
    }
  });
</script>

{% schema %}
{
  "name": "Collection Page",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 6,
      "max": 48,
      "step": 6,
      "label": "Products per page",
      "default": 12
    },
    {
      "type": "checkbox",
      "id": "show_color_variants",
      "label": "Show color variants",
      "default": true
    },
    {
      "type": "header",
      "content": "Style settings"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "accent_color",
      "label": "Accent color",
      "default": "#d4af37"
    }
  ],
  "presets": [
    {
      "name": "GBL Collection Page"
    }
  ]
}
{% endschema %}